"use client";

import { useState, useTransition } from 'react';
import { sqlQueryChatbot } from '@/ai/flows/sql-query-chatbot';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import { MessageCircle, Terminal, AlertTriangle, Sparkles } from 'lucide-react';
import { useToast } from "@/hooks/use-toast";
import { Label } from '../ui/label';

export function SqlChatbotSection() {
  const [question, setQuestion] = useState('');
  const [sqlQuery, setSqlQuery] = useState('');
  const [error, setError] = useState<string | null>(null);
  const [isPending, startTransition] = useTransition();
  const { toast } = useToast();

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    setError(null);
    setSqlQuery('');
    startTransition(async () => {
      try {
        if (!question.trim()) {
          setError("Question cannot be empty.");
          toast({ title: "Error", description: "Please enter a question.", variant: "destructive" });
          return;
        }
        const result = await sqlQueryChatbot({ question });
        setSqlQuery(result.sqlQuery);
        toast({ title: "SQL Query Generated", description: "AI successfully generated the SQL query.", className: "bg-green-500 text-white" });
      } catch (e) {
        console.error("Error fetching SQL query:", e);
        const errorMessage = e instanceof Error ? e.message : "An unexpected error occurred.";
        setError(errorMessage);
        toast({ title: "Error", description: `Failed to generate SQL query: ${errorMessage}`, variant: "destructive" });
      }
    });
  };

  return (
    <section aria-labelledby="sql-chatbot-title" className="mt-8">
      <h2 id="sql-chatbot-title" className="text-2xl font-semibold mb-4 text-foreground flex items-center">
        <MessageCircle className="mr-2 h-6 w-6 text-primary" /> AI SQL Query Chatbot
      </h2>
      <Card className="shadow-lg hover:shadow-xl transition-shadow duration-300">
        <CardHeader>
          <CardTitle>Natural Language to SQL</CardTitle>
          <CardDescription>
            Ask a question in natural language, and the AI will translate it into an SQL query for your Supabase charts.
          </CardDescription>
        </CardHeader>
        <form onSubmit={handleSubmit}>
          <CardContent>
            <Label htmlFor="naturalLanguageQuestion" className="mb-1 block">Your Question</Label>
            <Input
              id="naturalLanguageQuestion"
              type="text"
              value={question}
              onChange={(e) => setQuestion(e.target.value)}
              placeholder="e.g., Show me total revenue per month for the last quarter"
              disabled={isPending}
            />
          </CardContent>
          <CardFooter className="flex justify-end">
            <Button type="submit" disabled={isPending}>
              {isPending ? (
                <>
                  <Sparkles className="mr-2 h-4 w-4 animate-spin" />
                  Generating SQL...
                </>
              ) : (
                <>
                  <Terminal className="mr-2 h-4 w-4" />
                  Generate SQL Query
                </>
              )}
            </Button>
          </CardFooter>
        </form>
      </Card>

      {error && (
        <Alert variant="destructive" className="mt-6">
          <AlertTriangle className="h-4 w-4" />
          <AlertTitle>Error</AlertTitle>
          <AlertDescription>{error}</AlertDescription>
        </Alert>
      )}

      {sqlQuery && (
        <Card className="mt-6">
          <CardHeader>
            <CardTitle>Generated SQL Query</CardTitle>
          </CardHeader>
          <CardContent>
            <pre className="bg-muted p-4 rounded-md text-sm text-muted-foreground overflow-x-auto">
              <code>{sqlQuery}</code>
            </pre>
            <p className="text-xs text-muted-foreground mt-2">
              Note: This query is generated by AI. Always review and test SQL queries before running them on a production database.
            </p>
          </CardContent>
        </Card>
      )}
    </section>
  );
}
