// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A flow that translates natural language questions into SQL queries.
 *
 * - sqlQueryChatbot - A function that translates natural language questions into SQL queries.
 * - SQLQueryChatbotInput - The input type for the sqlQueryChatbot function.
 * - SQLQueryChatbotOutput - The return type for the sqlQueryChatbot function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SQLQueryChatbotInputSchema = z.object({
  question: z.string().describe('The natural language question to translate into SQL.'),
});
export type SQLQueryChatbotInput = z.infer<typeof SQLQueryChatbotInputSchema>;

const SQLQueryChatbotOutputSchema = z.object({
  sqlQuery: z.string().describe('The SQL query that answers the question.'),
});
export type SQLQueryChatbotOutput = z.infer<typeof SQLQueryChatbotOutputSchema>;

export async function sqlQueryChatbot(input: SQLQueryChatbotInput): Promise<SQLQueryChatbotOutput> {
  return sqlQueryChatbotFlow(input);
}

const prompt = ai.definePrompt({
  name: 'sqlQueryChatbotPrompt',
  input: {schema: SQLQueryChatbotInputSchema},
  output: {schema: SQLQueryChatbotOutputSchema},
  prompt: `Translate the following natural language question into an SQL query that can be used to update charts in Supabase. Return only the SQL query.

Question: {{{question}}}`,
});

const sqlQueryChatbotFlow = ai.defineFlow(
  {
    name: 'sqlQueryChatbotFlow',
    inputSchema: SQLQueryChatbotInputSchema,
    outputSchema: SQLQueryChatbotOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
